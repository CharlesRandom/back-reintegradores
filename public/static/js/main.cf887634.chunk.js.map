{"version":3,"sources":["components/auth/LoginForm.jsx","components/auth/SignupForm.jsx","services/auth.js","components/auth/AuthPage.jsx","Routes.js","App.js","serviceWorker.js","index.js"],"names":["FormItem","Form","Item","LoginForm","_ref","login","handleText","react_default","a","createElement","className","es_form","layout","method","onSubmit","input","name","onChange","prefix","icon","type","style","color","placeholder","es_button","htmlType","href","SignupForm","signup","SignupForm_FormItem","host","user","axios","post","then","r","data","catch","e","response","withCredentials","getProfile","get","AuthPage","state","loading","authError","message","error","_this","setState","preventDefault","_id","props","history","push","console","log","localStorage","setItem","JSON","stringify","field","target","value","pathname","this","location","spin","tip","auth_LoginForm","auth_SignupForm","Component","Routes","Switch","Route","exact","path","component","App","src_Routes","Boolean","window","hostname","match","require","config","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf887634.chunk.js","sourcesContent":["import React from 'react'\nimport { Form, Icon, Input, Button } from 'antd';\n\nconst FormItem = Form.Item;\n\nconst LoginForm = ({login, handleText}) => {\n  return (\n    <div className=\"auth-form\">\n      <Form layout=\"vertical\" method=\"POST\" onSubmit={login}>\n        <FormItem>\n        <Input name=\"email\" onChange={handleText} prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\n        </FormItem>\n        <FormItem>\n          <Input name=\"password\" onChange={handleText} prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n        </FormItem>\n        <FormItem>\n          <div className=\"d-flex jcc aic\">\n            <Button type=\"primary\" htmlType=\"submit\">Log in</Button>\n          </div>\n        </FormItem>\n        <div className=\"d-flex jcc aic\"><p>Or <a href=\"/signup\">register now!</a></p></div>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\nimport { Form, Icon, Input, Button } from 'antd';\n\nconst FormItem = Form.Item;\n\nconst SignupForm = ({signup, handleText}) => {\n  return (\n    <div className=\"auth-form\">\n      <Form layout=\"vertical\" method=\"POST\" onSubmit={signup}>\n        <FormItem>\n          <Input name=\"name\" onChange={handleText} prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Name\" />\n        </FormItem>\n        <FormItem>\n          <Input name=\"email\" onChange={handleText} prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email\" />\n        </FormItem>\n        <FormItem>\n          <Input name=\"password\" onChange={handleText} prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n        </FormItem>\n        <FormItem>\n          <div className=\"d-flex jcc aic\">\n            <Button type=\"primary\" htmlType=\"submit\">Sign up</Button>\n          </div>\n        </FormItem>\n      </Form>\n    </div>\n  )\n}\n\nexport default SignupForm\n","import axios from 'axios'\n\nconst host = 'http://localhost:3000/auth'\n// const host = 'https://ironpetbnb.herokuapp.com/auth'\n\n//signup\nexport const signup = user => {\n  return axios.post(host + '/signup', user, {})\n    .then(r=>r.data)\n    .catch(e=>e.response)\n}\n\n//login\nexport const login = user => {\n  return axios.post(host + '/login', user, {withCredentials:true})\n    .then(r=>r.data)\n    .catch(e=>e.response)\n}\n\n//logout\n\n\n\n//profile\nexport const getProfile = user => {\n  return axios.get(host + '/profile/' + user, {withCredentials:true})\n    .then(r=>r.data)\n    .catch(e=>e.response)\n}","import React, { Component } from 'react'\nimport { Spin, message } from 'antd';\nimport LoginForm from './LoginForm'\nimport SignupForm from './SignupForm'\n// import Navbar from '../home/Navbar';\nimport {signup, login, getProfile} from '../../services/auth'\n\nclass AuthPage extends Component {\n  state={\n    user:{},\n    loading:false\n  }\n  \n  authError = e => {\n    message.error(e);\n    this.setState({loading:false})\n  };\n\n  signup = e => {\n    this.setState({loading:true})\n    const {user} = this.state\n    e.preventDefault()\n    signup(user)\n      .then(r=>{\n        if(r._id){\n          this.props.history.push('/login')\n        }\n        else {\n          console.log('Something went wrong, try sign up again')\n          this.authError('Something went wrong, try sign up again')\n        }\n      }).catch(e=>{\n        console.log(e)\n        this.authError('Something went wrong, try sign up again')\n      })\n  }\n\n  login = e => {\n    this.setState({loading:true})\n    const {user} = this.state\n    e.preventDefault()\n    login(user)\n      .then(r=>{\n        if(r._id){\n          console.log('logged')\n          getProfile(r._id)\n          .then(r=>{\n            localStorage.setItem('loggedUser',JSON.stringify(r))\n            this.props.history.push('/profile')\n          })\n        }\n        else {\n          console.log('Something went wrong, please check credentials')\n          this.authError('Something went wrong, please check credentials')\n        }\n      }).catch(e=>{\n        console.log(e)\n        this.authError('Something went wrong, please check credentials')\n      })\n  }\n\n  handleText = e => {\n    const {user} = this.state\n    const field = e.target.name\n    const value = e.target.value\n    user[field] = value\n    this.setState({user})\n  }\n\n  render() {\n      const {pathname} = this.props.location\n      const { signup, login, handleText } = this\n      const {loading} = this.state\n    return (\n      <div className=\"home\">\n        <div>\n          {/* <Navbar /> */}\n          <div className=\"search-container\">\n            <div>\n              {pathname==='/login'?\n              <div>\n                {!loading ? <LoginForm login={login} handleText={handleText}/> : <Spin tip=\"Loading...\">\n                <LoginForm login={login} handleText={handleText}/>\n                </Spin>}\n              </div>\n              :\n              <div>\n                {!loading ? <SignupForm signup={signup} handleText={handleText}/> : <Spin tip=\"Loading...\">\n                <SignupForm signup={signup} handleText={handleText}/>\n                </Spin>}\n              </div>\n              }\n            </div>          \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AuthPage","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport AuthPage from './components/auth/AuthPage';\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path='/' component={AuthPage}/>\n    <Route path='/signup' component={AuthPage}/>\n    <Route path='/login' component={AuthPage}/>\n  </Switch>\n)\n\nexport default Routes","import React, { Component } from 'react';\nimport Routes from './Routes';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Routes/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'antd/dist/antd.css'\nrequire('dotenv').config()\n\nconst WithRouter = () => (\n  <BrowserRouter><App/></BrowserRouter>\n)\n\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}